---
apiVersion: v1
kind: ConfigMap
metadata:
  name: couchbase-elasticsearch-connector-configuration
  labels:
    app: {{ .Chart.Name }}
    version: {{ .Chart.Version }}
data:
  default-connector.toml: |
    # Introduction to TOML config file format:
    #   https://npf.io/2014/08/intro-to-toml/

    # The work of replicating a Couchbase bucket may be distributed between
    # several connector worker processes, known collectively as a "group".
    #
    # The connector name uniquely identifies a group of connector workers.
    # All workers in the group must use the same name. The group name
    # is required even if there is only one worker.
    #
    # TIP: Changing the name invalidates the replication status checkpoint.
    # To preserve the checkpoint, run the `cbes-checkpoint-backup` command
    # before renaming, and `cbes-checkpoint-restore` afterwards.
    [group]
      name = '${CBES_GROUP:default}'

    # The simplest way to deploy the connector is "static" mode. In this mode,
    # each worker process is independent of the others, and must be manually
    # configured to know which partitions it is responsible for.
    [group.static]
      # Each member in a static group must have a unique member number.
      memberNumber = ${CBES_MEMBERNUMBER:1} # A value from 1 to 'totalMembers', inclusive.

      # The total number of workers in the static group.
      #
      # TIP: To safely add or remove workers from a static group, first stop all
      # running workers, then reconfigure them with the new 'totalMembers' value,
      # and finally start all the workers again.
      totalMembers = ${CBES_TOTALMEMBERS:1}

    # Performance metrics may be written to a log file and/or exposed via HTTP.
    [metrics]
      httpPort = 31415 # Positive = fixed, 0 = ephemeral, -1 = disable HTTP server
      logInterval = '0m' # Set to '0m' to disable metrics logging

    # Required if secure connections are enabled (SSL/TLS).
    [truststore]
      # Use the Java keytool command to create this file and import the root
      # certificate from the Security section of the Couchbase admin console
      # and/or the CA certificate used by Elasticsearch.
      path = '/tmp/truststore.jks'
      pathToPassword = 'secrets/truststore-password.toml'

    [couchbase]
      hosts = ['couchbase']
      network = 'auto'
      bucket = 'data'

      # By default the connector stores replication checkpoint documents
      # in the source bucket. If you'd rather store those documents in a
      # separate existing bucket, put that bucket's name here.
      metadataBucket = ''

      # At a minimum, the Couchbase user must have the "Data DCP Reader"
      # role for the source bucket, and "Data Reader" & "Data Writer"
      # roles for the bucket where replication checkpoints are stored.
      username = '{{ .Values.couchbase.username }}'

      # Path to a separate TOML file with a single 'password' key.
      # The base for a relative path is the connector installation directory.
      pathToPassword = 'secrets/couchbase-password.toml'

      # Optionally use SSL/TLS to encrypt the connection between Couchbase and
      # the connector. Requires Couchbase Enterprise Edition, and requires the
      # [truststore] section to be configured.
      secureConnection = false

    # Options for the Couchbase Database Change Protocol (DCP).
    [couchbase.dcp]
      compression = true
      flowControlBuffer = '128mb'
      persistencePollingInterval = '100ms'

    [elasticsearch]
      hosts = ['elasticsearch-es-http']
      username = '{{ .Values.elasticsearch.username }}'

      # Path to a separate TOML file with a single 'password' key.
      # The base for a relative path is the connector installation directory.
      pathToPassword = 'secrets/elasticsearch-password.toml'

      # Optionally use SSL/TLS to encrypt the connection between Elasticsearch and
      # the connector. Requires the [truststore] section to be configured. See also:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-tls.html
      secureConnection = true

    # If connecting directly to an Amazon Elasticsearch Service, specify the AWS region.
    # AWS credentials are obtained from the Default Credential Provider Chain.
    # https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html
    [elasticsearch.aws]
      region = ''

    [elasticsearch.bulkRequestLimits]
      bytes = '10mb'
      actions = 1000
      timeout = '1m'
      concurrentRequests = 2

    [elasticsearch.docStructure]
      # The Elasticsearch document may optionally contain Couchbase metadata
      # (cas, revision, expiry, etc). If present, this will be a top-level field
      # of the Elasticsearch document. If you have configured the connector
      # to put document content at the top level, choose a field name that will
      # not conflict with any document fields. To omit the metadata field,
      # use an empty string.
      metadataFieldName = ''

      # false means the ES document root will have a 'doc' field whose value is
      # the Couchbase document.
      # true means the ES document will be identical to the Couchbase document,
      # with the possible addition of the metadata field.
      documentContentAtTopLevel = false

      # false means ignore Couchbase counter documents.
      # true means replicate them as Object nodes like {"value":<counter>}
      wrapCounters = false

    # The values in this section may be overridden by specific type definitions.
    [elasticsearch.typeDefaults]
      # Write matching documents to this index.
      # Empty string means "no default".
      index = ''

      # Send matching documents though this pipeline.
      # Empty string means "no pipeline".
      pipeline = ''

      # Assign this type to matching documents.
      # For ES 5.x remove leading underscore!
      typeName = '_doc'

      # If true, ignore matching documents entirely (implies 'ignoreDeletes').
      ignore = false

      # If true, never delete matching documents from Elasticsearch.
      ignoreDeletes = false

    # Sample document type definitions for the travel-sample bucket.
    # Replace these to match your own data model.
    #
    # At a minimum, each type must specify a 'regex' (Java regular expression)
    # or 'prefix' property. The type config matches any Couchbase document
    # whose IDs matches the regex or prefix.
    #
    # The order of type definitions is significant. If a document ID matches
    # more than one type, the assigned type will be the one that occurs first
    # in this configuration. If none match, the document will not be indexed.
    [[elasticsearch.type]]
      prefix = '_sync:' # Couchbase Sync Gateway metadata
      ignore = true

    # [[elasticsearch.type]]
    #   prefix = 'airline_'
    #   index = 'airlines'
    #   pipeline = ''

    # [[elasticsearch.type]]
    #   # Regex just for example. Matches prefixes "airport_", "seaport_", etc.
    #   regex = '.*port_.*'
    #   index = 'airports'

    # [[elasticsearch.type]]
    #   # Index can be inferred from document ID by including a capturing group
    #   # named "index". This example matches IDs that start with one or more
    #   # characters followed by "::". It directs "user::alice" to index "user",
    #   # and "foo::bar::123" to index "foo".
    #   regex = '(?<index>.+?)::.*'

    # In the travel-sample data model, a route is the child of an airline.
    # Each route document has an `airlineid` field that holds the parent ID.
    # The following type definition ensures each route document is stored
    # in the same index and shard as its parent airline document.
    # For more information about Elasticsearch parent/join fields, see
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/parent-join.html
    # [[elasticsearch.type]]
    #   prefix = 'route_'
    #   index = 'airlines'
    #   routing = '/airlineid' # JSON pointer to the parent ID field.
    #   ignoreDeletes = true # Must always be true if `routing` is specified.

    [[elasticsearch.type]]
      prefix = '' # Empty prefix matches any document ID.
      index = 'data'

    # When Elasticsearch rejects a document (usually due to a type mapping error)
    # a rejection log entry document is written to Elasticsearch. The log entry's
    # document ID is the ID of the rejected Couchbase document. The log entry's
    # content has the following fields:
    #   "index"  - (string) name of the index the connector tried to write to
    #   "type"   - (string) document type name used for the write attempt
    #   "action" - (string) failed action type ("INDEX" or "DELETE")
    #   "error"  - (string) error message received from Elasticsearch
    [elasticsearch.rejectionLog]
      index = 'cbes-rejects'
      typeName = '_doc' # For ES 5.x remove leading underscore!
  log4j2.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <Configuration status="INFO">
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{1.} - %msg%n"/>
            </Console>

            <RollingFile name="General"
                         fileName="${env:APP_HOME}/logs/cbes.log"
                         filePattern="${env:APP_HOME}/logs/cbes.%d{yyy-MM-dd}.%i.log.gz"
                         ignoreExceptions="false">
                <PatternLayout pattern="%d{HH:mm:ss.SSS} [%t] %-5level %logger{1.} - %msg%n"/>
                <Policies>
                    <OnStartupTriggeringPolicy/>
                    <SizeBasedTriggeringPolicy size="250 MB"/>
                    <TimeBasedTriggeringPolicy/>
                </Policies>
                <DefaultRolloverStrategy>
                    <Delete basePath="${env:APP_HOME}/logs/">
                        <IfFileName glob="cbes.*.log.gz"/>
                        <IfLastModified age="14d"/>
                    </Delete>
                </DefaultRolloverStrategy>
            </RollingFile>

            <RollingFile name="Metrics"
                         fileName="${env:APP_HOME}/logs/cbes-metrics.log"
                         filePattern="${env:APP_HOME}/logs/cbes-metrics.%d{yyy-MM-dd}.%i.log.gz"
                         ignoreExceptions="false">
                <PatternLayout pattern="%d{yyy-MM-dd HH:mm:ss.SSS} %msg%n"/>
                <Policies>
                    <OnStartupTriggeringPolicy/>
                    <SizeBasedTriggeringPolicy size="250 MB"/>
                    <TimeBasedTriggeringPolicy/>
                </Policies>
                <DefaultRolloverStrategy>
                    <Delete basePath="${env:APP_HOME}/logs/">
                        <IfFileName glob="cbes-metrics.*.log.gz"/>
                        <IfLastModified age="10d"/>
                    </Delete>
                </DefaultRolloverStrategy>
            </RollingFile>
        </Appenders>

        <Loggers>
            <Root level="info">
                <AppenderRef ref="Console"/>
                <AppenderRef ref="General"/>
            </Root>
            <Logger name="com.couchbase.client.core" level="warn"/>
            <Logger name="cbes.metrics" level="info" additivity="false">
                <AppenderRef ref="Metrics"/>
            </Logger>

            <!-- Suppress document type deprecation warnings issued by Elasticsearch 7 -->
            <Logger name="org.elasticsearch.client.RestClient">
                <RegexFilter regex=".*\[types removal].*" onMatch="DENY" onMismatch="NEUTRAL"/>
            </Logger>
        </Loggers>
    </Configuration>
  truststore.jks.b64: {{ .Values.elasticsearch.truststore }}
